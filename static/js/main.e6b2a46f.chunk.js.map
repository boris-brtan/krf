{"version":3,"sources":["components/User.js","Menu.js","serviceWorker.js","api.js","sagas.js","reducers/auth.js","reducers/donation.js","reducers/donations.js","reducers/settings.js","reducers/user.js","reducers/index.js","index.js","actions.js","App.js","components/Activate.js","components/Donation.js","components/Donations.js","components/Login.js"],"names":["useStyles","makeStyles","theme","createStyles","root","padding","spacing","card","margin","maxWidth","cardHeader","paddingBottom","avatar","backgroundColor","palette","secondary","main","color","contrastText","User","classes","user","useSelector","state","userReducer","console","log","className","title","variant","Meno","subheader","KrvnaSkupina","FenotypAsString","Poistovna","aria-label","primary","PocetOdberov","Date","TerminNasledOdberu","toLocaleDateString","DomovskePracovisko","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","paddingTop","contentShift","paletteMode","position","left","Menu","props","dispatch","useDispatch","useTheme","useState","open","setOpen","togglePalleteMode","toggleDrawer","clsx","edge","onClick","noWrap","anchor","paper","onTransitionEnd","window","dispatchEvent","Event","type","map","text","idx","button","key","push","handleMenuItem","handler","auth_clear","children","Boolean","location","hostname","match","API_URL","API","auth","activate","a","fetch","method","headers","evc","body","JSON","stringify","response","json","token","login","pass","pin","home","userInfo","donations","donation","id","donationResult","donationResultParam","paramId","settings","params","bloodSettings","authActivate","authLogin","userHome","userCard","userDonations","userDonation","userDonationResult","userDonationResultParam","settingsParams","action","payload","call","api","put","AUTH_ACTIVATE_SUCCEEDED","message","AUTH_ACTIVATE_FAILED","AUTH_LOGIN_SUCCEEDED","AUTH_LOGIN_FAILED","USER_HOME_SUCCEEDED","USER_HOME_FAILED","USER_CARD_SUCCEEDED","USER_CARD_FAILED","USER_DONATIONS_SUCCEEDED","USER_DONATIONS_FAILED","AUTH_TOKEN_EXPIRED","USER_DONATION_SUCCEEDED","USER_DONATION_RESULT_REQUESTED","USER_DONATION_FAILED","USER_DONATION_RESULT_SUCCEEDED","USER_DONATION_RESULT_FAILED","USER_DONATION_PARAM_SUCCEEDED","USER_DONATION_PARAM_FAILED","SETTINGS_PARAMS_SUCCEEDED","SETTINGS_PARAMS_FAILED","all","takeLatest","AUTH_ACTIVATE_REQUESTED","AUTH_LOGIN_REQUESTED","USER_HOME_REQUESTED","USER_CARD_REQUESTED","USER_DONATIONS_REQUESTED","USER_DONATION_REQUESTED","USER_DONATION_PARAM_REQUESTED","SETTINGS_PARAMS_REQUESTED","initialState","activated","authReducer","AUTH_ACTIVATE_ENABLED","AUTH_CLEAR","info","initialResultState","result","initialParamState","param","donationReducer","settingsReducer","initialStateHome","Fenotyp","Pohlavie","initialStateCard","Priezvisko","RodneCislo","KrvnaSkupinaPopis","FenotypAsText","KrvnaSkupinaZaklad","combineReducers","donationsReducer","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","parse","localStorage","applyMiddleware","routerMiddleware","run","rootSaga","ReactDOM","render","App","document","getElementById","onbeforeunload","getState","navigator","serviceWorker","ready","then","registration","unregister","auth_activate","auth_activate_enable","auth_login","user_home","user_card","user_donations","user_donation","user_donationResultParam","settings_params","setPaletteMode","responsiveFontSizes","createMuiTheme","openAuthActivate","openAuthLogin","length","process","exact","path","component","Donations","Donation","FormDialog","setUser","aria-labelledby","autoFocus","label","fullWidth","onInput","e","target","value","disabled","grid","flexWrap","breakpoints","up","marginBottom","textAlign","flex","minWidth","alignSelf","selectedCard","background","cardArea","height","BarChart","chartType","loader","data","role","odber","Datum","replace","Hodnota","options","animation","startup","annotations","textStyle","fontSize","default","chartArea","top","colors","hAxis","gridlines","count","baselineColor","textColor","titleTextStyle","vAxis","minValue","legend","rootProps","slice","donationId","selectedParam","setSelectedParam","Nazov","MernaJednotka","Zaciatok","toLocaleTimeString","Koniec","settingsParam","Id","item","Fragment","Pracovisko","DatumOdberu","TypOdberu","MnozstvoMl","setPass","sha256"],"mappings":"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","file":"static/js/main.e6b2a46f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { makeStyles, createStyles } from '@material-ui/styles'\r\nimport { CardHeader, Avatar, Card, CardContent, Typography, List, ListItem, ListItemText, Divider } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: theme.spacing(2)\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            maxWidth: 700,\r\n        },\r\n        cardHeader: {\r\n            paddingBottom: 0,\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n        },\r\n    })\r\n)\r\n\r\nexport default function User() {\r\n    const classes = useStyles()\r\n    const user = useSelector((state) => state.userReducer)\r\n    console.log(user)\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    className={classes.cardHeader}\r\n                    title={<Typography variant=\"body1\">{user.Meno}</Typography>}\r\n                    subheader={<>{user.KrvnaSkupina + ' ' + user.FenotypAsString}<br />{user.Poistovna}</>}\r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                            {user.Meno[0]}\r\n                        </Avatar>\r\n                    }>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem >\r\n                            <ListItemText\r\n                                primary=\"Počet odberov\"\r\n                                secondary={user.PocetOdberov}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Nasledujúci odporúčaný odber\"\r\n                                secondary={new Date(user.TerminNasledOdberu).toLocaleDateString()}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Registrované pracovisko\"\r\n                                secondary={user.DomovskePracovisko}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    AppBar, Divider, Drawer, IconButton, List, ListItem,\r\n    ListItemIcon, ListItemText, Toolbar, Typography\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport DarkThemeIcon from '@material-ui/icons/Brightness4'\r\nimport LightThemeIcon from '@material-ui/icons/Brightness7'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { push } from 'react-router-redux'\r\nimport { useTheme } from '@material-ui/styles'\r\nimport { auth_clear } from './actions'\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            paddingTop: theme.spacing(1),\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n        paletteMode: {\r\n            position: 'absolute',\r\n            left: 0,\r\n        }\r\n    }),\r\n)\r\n\r\nexport default function Menu(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const { togglePalleteMode } = props\r\n    const toggleDrawer = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleMenuItem = (idx) => dispatch(push(['/user', '/'][idx]))\r\n    const handleDrawerTransition = () => {\r\n        window.dispatchEvent(new Event('resize'))\r\n    }\r\n    const handleAuthClear = () => dispatch(auth_clear())\r\n\r\n    return (<>\r\n        <AppBar position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\r\n                    onClick={toggleDrawer} className={clsx(classes.menuButton, open && classes.hide)}\r\n                ><MenuIcon /></IconButton>\r\n                <Typography variant=\"h6\" noWrap>Slovenské darovanie krvi</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"persistent\" anchor=\"left\" open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n            onTransitionEnd={handleDrawerTransition}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={togglePalleteMode} className={classes.paletteMode}>\r\n                    {theme.palette.type === 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\r\n                </IconButton>\r\n                <IconButton onClick={toggleDrawer}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {['Darca', 'Výsledky'].map((text, idx) => (\r\n                    <ListItem button key={text} onClick={() => handleMenuItem(idx)}>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {[{ text: 'Odhlásiť sa', handler: handleAuthClear }].map(({ text, handler }) => (\r\n                    <ListItem button key={text} onClick={handler}>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            {props.children}\r\n        </main>\r\n    </>)\r\n}\r\n\r\nMenu.propTypes = {\r\n    children: PropTypes.any,\r\n    togglePalleteMode: PropTypes.func,\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const API_URL = 'https://krv.roxor.cloud/API'\r\n\r\nconst API = {\r\n    auth: {\r\n        activate: async (user) => {\r\n            const response = await fetch(API_URL + '/Authentication/ActivateRequest', {\r\n                method: 'POST',\r\n                headers: {\r\n                    evc: user,\r\n                },\r\n                body: JSON.stringify({\r\n                    // activatePIN: null,\r\n                    // deviceId: null,\r\n                    evc: user,\r\n                    // pin: null,\r\n                }),\r\n            })\r\n            const token = await response.json()\r\n\r\n            return token\r\n        },\r\n        login: async (user, pass) => {\r\n            const response = await fetch(API_URL + '/Authentication/login', {\r\n                headers: {\r\n                    evc: user,\r\n                    pin: pass,\r\n                },\r\n            })\r\n            const token = await response.json()\r\n\r\n            return token\r\n        }\r\n    },\r\n    user: {\r\n        home: async (token) => {\r\n            const response = await fetch(API_URL + '/darca/Vitajte', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const userInfo = response.json()\r\n\r\n            // {\r\n            //     \"TerminNasledOdberu\":Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"KrvnaSkupina\":String,\r\n            //     \"Fenotyp\":String,\r\n            //     \"FenotypAsString\":String,\r\n            //     \"Pohlavie\":String(\"M\",\"Z\")\r\n            // }\r\n            return userInfo\r\n        },\r\n        card: async (token) => {\r\n            const response = await fetch(API_URL + '/darca/PreukazDarcu', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const userInfo = response.json()\r\n\r\n            //    {\r\n            //     \"Meno\": String,\r\n            //     \"Priezvisko\":String,\r\n            //     \"RodneCislo\":String,\r\n            //     \"DomovskePracovisko\":String,\r\n            //     \"PocetOdberov\":Number,\r\n            //     \"KrvnaSkupinaPopis\":String,\r\n            //     \"FenotypAsText\":String,\r\n            //     \"Poistovna\":String,\r\n            //     \"KrvnaSkupinaZaklad\":String\r\n            // }\r\n            return userInfo\r\n        },\r\n        donations: async (token) => {\r\n            const response = await fetch(API_URL + '/darca/odber', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donations = await response.json()\r\n\r\n            // [{\r\n            //     \"Id\":Number,\r\n            //     \"DatumOdberu\":Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"CisloOdberu\":String,\r\n            //     \"TypOdberu\":String(\"celá krv\",\"plazma\",...),\r\n            //     \"Pracovisko\":String,\r\n            //     \"MnozstvoMl\":Number,\r\n            //     \"Spracovanie\":Number(bool),\r\n            //     \"Karantena\":Number(bool)\r\n            // },]\r\n            return donations\r\n        },\r\n        donation: async (token, id) => {\r\n            const response = await fetch(API_URL + `/darca/odber/${id}`, {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donation = await response.json()\r\n\r\n            // {\r\n            //     \"Zaciatok\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Koniec\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Trvanie\": Number[minute],\r\n            //     \"Vyjazd\": Boolean,\r\n            //     \"Autoodber\": Boolean\r\n            // }\r\n            return donation\r\n        },\r\n        donationResult: async (token, id) => {\r\n            const response = await fetch(API_URL + `/darca/odber/${id}/lvko`, {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donation = await response.json()\r\n\r\n            // [{\r\n            //     \"IdParamKO\": Number(4,2,3,5,6,9), // no 27 why ???\r\n            //     \"Datum\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Hodnota\": Number,\r\n            //     \"MimoLimit\": Boolean,\r\n            //     \"OdberId\": Number(0),\r\n            //     \"IsSelected\": Boolean,\r\n            //     \"IsPadding\": Boolean\r\n            // },]\r\n            return donation\r\n        },\r\n        donationResultParam: async (token, id, paramId) => {\r\n            const response = await fetch(API_URL + `/darca/lvko/${paramId}/${id}`, {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donation = await response.json()\r\n\r\n            // [{\r\n            //     \"Datum\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Hodnota\": 7.00,\r\n            //     \"MimoLimit\": Boolean,\r\n            //     \"OdberId\": Number,\r\n            //     \"IsSelected\": Boolean,\r\n            //     \"IsPadding\": Boolean\r\n            // },]\r\n            return donation\r\n        },\r\n    },\r\n    settings: {\r\n        params: async (token) => {\r\n            const response = await fetch(API_URL + '/ciselniky/ParametreKO', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n\r\n            const bloodSettings = response.json()\r\n\r\n            // [{\r\n            //     \"Id\": Number,\r\n            //     \"Kod\": String(\r\n            //         4: \"HGB hemoglobín\",\r\n            //         2: \"WBC leukocyty\",\r\n            //         3: \"RBC erytrocyty\",\r\n            //         5: \"HCT hematokrit\",\r\n            //         6: \"MCV stredný objem Er\",\r\n            //         9: \"PLT trombocyty\",\r\n            //         27: \"Hgb odber z prsta\"\r\n            //     ),\r\n            //     \"Nazov\": \"Červené krvné farbivo\",\r\n            //     \"MernaJednotka\": String(\"g/l\",\"x10e9/l\",\"x10e12/l\",\"l/l\",\"fl\",\"x10e9/l\",\"g/l\")\r\n            //     \"DolnaHranicaMuzi\": Number,\r\n            //     \"HornaHranicaMuzi\": Number,\r\n            //     \"DolnaHranicaZeny\": Number,\r\n            //     \"HornaHranicaZeny\": Number\r\n            // },]\r\n            return bloodSettings\r\n        },\r\n    },\r\n}\r\n\r\nexport default API\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects'\r\nimport { push } from 'react-router-redux'\r\nimport api from './api'\r\nimport {\r\n    AUTH_ACTIVATE_REQUESTED, AUTH_ACTIVATE_SUCCEEDED, AUTH_ACTIVATE_FAILED,\r\n    AUTH_LOGIN_REQUESTED, AUTH_LOGIN_SUCCEEDED, AUTH_LOGIN_FAILED,\r\n    AUTH_TOKEN_EXPIRED,\r\n    USER_HOME_REQUESTED, USER_HOME_SUCCEEDED, USER_HOME_FAILED,\r\n    USER_CARD_REQUESTED, USER_CARD_SUCCEEDED, USER_CARD_FAILED,\r\n    USER_DONATIONS_REQUESTED, USER_DONATIONS_SUCCEEDED, USER_DONATIONS_FAILED,\r\n    USER_DONATION_REQUESTED, USER_DONATION_SUCCEEDED, USER_DONATION_FAILED,\r\n    USER_DONATION_RESULT_REQUESTED, USER_DONATION_RESULT_SUCCEEDED, USER_DONATION_RESULT_FAILED,\r\n    USER_DONATION_PARAM_REQUESTED, USER_DONATION_PARAM_SUCCEEDED, USER_DONATION_PARAM_FAILED,\r\n    SETTINGS_PARAMS_REQUESTED, SETTINGS_PARAMS_SUCCEEDED, SETTINGS_PARAMS_FAILED,\r\n} from './actions'\r\n\r\nfunction* authActivate(action) {\r\n    try {\r\n        const user = action.payload\r\n        const payload = yield call(api.auth.activate, user)\r\n\r\n        yield put({ type: AUTH_ACTIVATE_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: AUTH_ACTIVATE_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* authLogin(action) {\r\n    try {\r\n        const { user, pass } = action.payload\r\n        const payload = yield call(api.auth.login, user, pass)\r\n\r\n        yield put({ type: AUTH_LOGIN_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: AUTH_LOGIN_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* userHome(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.user.home, token)\r\n\r\n        yield put({ type: USER_HOME_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_HOME_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* userCard(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.user.card, token)\r\n\r\n        yield put({ type: USER_CARD_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_CARD_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* userDonations(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.user.donations, token)\r\n\r\n        yield put({ type: USER_DONATIONS_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATIONS_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* userDonation(action) {\r\n    try {\r\n        const { token, id } = action.payload\r\n        const payload = yield call(api.user.donation, token, id)\r\n\r\n        yield put({ type: USER_DONATION_SUCCEEDED, payload })\r\n        yield put({ type: USER_DONATION_RESULT_REQUESTED, payload: action.payload })\r\n        yield put(push('/donation/' + id))\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATION_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* userDonationResult(action) {\r\n    try {\r\n        const { token, id } = action.payload\r\n        const payload = yield call(api.user.donationResult, token, id)\r\n\r\n        yield put({ type: USER_DONATION_RESULT_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATION_RESULT_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* userDonationResultParam(action) {\r\n    try {\r\n        const { token, id, paramId } = action.payload\r\n        const payload = yield call(api.user.donationResultParam, token, id, paramId)\r\n\r\n        yield put({ type: USER_DONATION_PARAM_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATION_PARAM_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* settingsParams(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.settings.params, token)\r\n\r\n        yield put({ type: SETTINGS_PARAMS_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: SETTINGS_PARAMS_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nexport default function* () {\r\n    yield all([\r\n        yield takeLatest(AUTH_ACTIVATE_REQUESTED, authActivate),\r\n        yield takeLatest(AUTH_LOGIN_REQUESTED, authLogin),\r\n        yield takeLatest(USER_HOME_REQUESTED, userHome),\r\n        yield takeLatest(USER_CARD_REQUESTED, userCard),\r\n        yield takeLatest(USER_DONATIONS_REQUESTED, userDonations),\r\n        yield takeLatest(USER_DONATION_REQUESTED, userDonation),\r\n        yield takeLatest(USER_DONATION_RESULT_REQUESTED, userDonationResult),\r\n        yield takeLatest(USER_DONATION_PARAM_REQUESTED, userDonationResultParam),\r\n        yield takeLatest(SETTINGS_PARAMS_REQUESTED, settingsParams),\r\n    ])\r\n}\r\n","import {\r\n    AUTH_ACTIVATE_SUCCEEDED, AUTH_ACTIVATE_FAILED, AUTH_ACTIVATE_ENABLED,\r\n    AUTH_LOGIN_REQUESTED, AUTH_LOGIN_SUCCEEDED, AUTH_LOGIN_FAILED,\r\n    AUTH_TOKEN_EXPIRED, AUTH_CLEAR,\r\n} from '../actions'\r\n\r\nconst initialState = {\r\n    user: null,\r\n    token: null,\r\n    activated: false,\r\n    pass: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIVATE_SUCCEEDED:\r\n        case AUTH_ACTIVATE_ENABLED:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                activated: true,\r\n            }\r\n        case AUTH_ACTIVATE_FAILED:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                activated: false\r\n            }\r\n        case AUTH_LOGIN_REQUESTED:\r\n            return {\r\n                ...state,\r\n                pass: action.payload.pass\r\n            }\r\n        case AUTH_LOGIN_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            }\r\n        case AUTH_LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                pass: null,\r\n            }\r\n        case AUTH_TOKEN_EXPIRED:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n            }\r\n        case AUTH_CLEAR:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","import {\r\n    USER_DONATION_SUCCEEDED, USER_DONATION_FAILED,\r\n    USER_DONATION_RESULT_SUCCEEDED, USER_DONATION_RESULT_FAILED,\r\n    USER_DONATION_PARAM_SUCCEEDED, USER_DONATION_PARAM_FAILED,\r\n} from '../actions'\r\n\r\nconst initialState = {\r\n    info: {}\r\n}\r\n\r\nconst initialResultState = {\r\n    result: []\r\n}\r\n\r\nconst initialParamState = {\r\n    param: []\r\n}\r\n\r\nexport const donationReducer = (state = {\r\n    ...initialState,\r\n    ...initialParamState,\r\n    ...initialResultState,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case USER_DONATION_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            }\r\n        case USER_DONATION_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        case USER_DONATION_RESULT_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                result: action.payload\r\n            }\r\n        case USER_DONATION_RESULT_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialResultState\r\n            }\r\n        case USER_DONATION_PARAM_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                param: action.payload\r\n            }\r\n        case USER_DONATION_PARAM_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialParamState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default donationReducer\r\n","import {\r\n    USER_DONATIONS_SUCCEEDED, USER_DONATIONS_FAILED,\r\n} from '../actions'\r\n\r\nconst initialState = []\r\n\r\nexport const donationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_DONATIONS_SUCCEEDED:\r\n            return action.payload\r\n        case USER_DONATIONS_FAILED:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default donationReducer\r\n","import {\r\n    SETTINGS_PARAMS_SUCCEEDED, SETTINGS_PARAMS_FAILED,\r\n} from '../actions'\r\n\r\nconst initialState = { \r\n    params: [] \r\n}\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SETTINGS_PARAMS_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                params: action.payload\r\n            }\r\n        case SETTINGS_PARAMS_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default settingsReducer\r\n","import {\r\n    USER_HOME_SUCCEEDED, USER_HOME_FAILED,\r\n    USER_CARD_SUCCEEDED, USER_CARD_FAILED,\r\n} from '../actions'\r\n\r\nconst initialStateHome = {\r\n    TerminNasledOdberu: null,\r\n    KrvnaSkupina: null,\r\n    Fenotyp: null,\r\n    FenotypAsString: null,\r\n    Pohlavie: null,\r\n}\r\n\r\nconst initialStateCard = {\r\n    Meno: null,\r\n    Priezvisko: null,\r\n    RodneCislo: null,\r\n    DomovskePracovisko: null,\r\n    PocetOdberov: null,\r\n    KrvnaSkupinaPopis: null,\r\n    FenotypAsText: null,\r\n    Poistovna: null,\r\n    KrvnaSkupinaZaklad: null,\r\n}\r\n\r\nexport const userReducer = (state = { ...initialStateHome, ...initialStateCard, }, action) => {\r\n    switch (action.type) {\r\n        case USER_HOME_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case USER_HOME_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialStateHome\r\n            }\r\n        case USER_CARD_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case USER_CARD_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialStateCard\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer\r\n","import { combineReducers } from 'redux'\r\nimport authReducer from './auth'\r\nimport donationReducer from './donation'\r\nimport donationsReducer from './donations'\r\nimport settingsReducer from './settings'\r\nimport userReducer from './user'\r\n\r\nexport default combineReducers({\r\n    authReducer,\r\n    donationReducer,\r\n    donationsReducer,\r\n    settingsReducer,\r\n    userReducer\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createBrowserHistory } from 'history'\nimport { Router } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './sagas'\nimport rootReducer from './reducers'\n\nconst history = createBrowserHistory()\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n    rootReducer,\n    JSON.parse(localStorage.state || \"{}\"),\n    applyMiddleware(\n        sagaMiddleware,\n        routerMiddleware(history)\n    )\n)\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\nwindow.onbeforeunload = () => {\n    localStorage.state = JSON.stringify(store.getState())\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const AUTH_ACTIVATE_REQUESTED = 'AUTH_ACTIVATE_REQUESTED'\r\nexport const AUTH_ACTIVATE_SUCCEEDED = 'AUTH_ACTIVATE_SUCCEEDED'\r\nexport const AUTH_ACTIVATE_FAILED = 'AUTH_ACTIVATE_FAILED'\r\nexport const AUTH_ACTIVATE_ENABLED = 'AUTH_ACTIVATE_ENABLE'\r\n\r\nexport const AUTH_LOGIN_REQUESTED = 'AUTH_LOGIN_REQUESTED'\r\nexport const AUTH_LOGIN_SUCCEEDED = 'AUTH_LOGIN_SUCCEEDED'\r\nexport const AUTH_LOGIN_FAILED = 'AUTH_LOGIN_FAILED'\r\n\r\nexport const AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED'\r\nexport const AUTH_CLEAR = 'AUTH_CLEAR'\r\n\r\nexport const USER_HOME_REQUESTED = 'USER_HOME_REQUESTED'\r\nexport const USER_HOME_SUCCEEDED = 'USER_HOME_SUCCEEDED'\r\nexport const USER_HOME_FAILED = 'USER_HOME_FAILED'\r\n\r\nexport const USER_CARD_REQUESTED = 'USER_CARD_REQUESTED'\r\nexport const USER_CARD_SUCCEEDED = 'USER_CARD_SUCCEEDED'\r\nexport const USER_CARD_FAILED = 'USER_CARD_FAILED'\r\n\r\nexport const USER_DONATIONS_REQUESTED = 'USER_DONATIONS_REQUESTED'\r\nexport const USER_DONATIONS_SUCCEEDED = 'USER_DONATIONS_SUCCEEDED'\r\nexport const USER_DONATIONS_FAILED = 'USER_DONATIONS_FAILED'\r\n\r\nexport const USER_DONATION_REQUESTED = 'USER_DONATION_REQUESTED'\r\nexport const USER_DONATION_SUCCEEDED = 'USER_DONATION_SUCCEEDED'\r\nexport const USER_DONATION_FAILED = 'USER_DONATION_FAILED'\r\n\r\nexport const USER_DONATION_RESULT_REQUESTED = 'USER_DONATION_RESULT_REQUESTED'\r\nexport const USER_DONATION_RESULT_SUCCEEDED = 'USER_DONATION_RESULT_SUCCEEDED'\r\nexport const USER_DONATION_RESULT_FAILED = 'USER_DONATION_RESULT_FAILED'\r\n\r\nexport const USER_DONATION_PARAM_REQUESTED = 'USER_DONATION_PARAM_REQUESTED'\r\nexport const USER_DONATION_PARAM_SUCCEEDED = 'USER_DONATION_PARAM_SUCCEEDED'\r\nexport const USER_DONATION_PARAM_FAILED = 'USER_DONATION_PARAM_FAILED'\r\n\r\nexport const SETTINGS_PARAMS_REQUESTED = 'SETTINGS_PARAMS_REQUESTED'\r\nexport const SETTINGS_PARAMS_SUCCEEDED = 'SETTINGS_PARAMS_SUCCEEDED'\r\nexport const SETTINGS_PARAMS_FAILED = 'SETTINGS_PARAMS_FAILED'\r\n\r\nexport const auth_activate = (user) => ({ type: AUTH_ACTIVATE_REQUESTED, payload: user })\r\nexport const auth_activate_enable = (user) => ({ type: AUTH_ACTIVATE_ENABLED, payload: user })\r\nexport const auth_login = (user, pass) => ({ type: AUTH_LOGIN_REQUESTED, payload: { user, pass } })\r\nexport const auth_clear = () => ({ type: AUTH_CLEAR })\r\n\r\nexport const user_home = (token) => ({ type: USER_HOME_REQUESTED, payload: token })\r\nexport const user_card = (token) => ({ type: USER_CARD_REQUESTED, payload: token })\r\nexport const user_donations = (token) => ({ type: USER_DONATIONS_REQUESTED, payload: token })\r\nexport const user_donation = (token, id) => ({ type: USER_DONATION_REQUESTED, payload: { token, id } })\r\nexport const user_donationResult = (token, id) => ({ type: USER_DONATION_RESULT_REQUESTED, payload: { token, id } })\r\nexport const user_donationResultParam = (token, id, paramId) => ({\r\n    type: USER_DONATION_PARAM_REQUESTED,\r\n    payload: { token, id, paramId }\r\n})\r\n\r\nexport const settings_params = (token) => ({ type: SETTINGS_PARAMS_REQUESTED, payload: token })\r\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { user_card, user_home, settings_params } from './actions'\nimport Activate from './components/Activate'\nimport Donation from './components/Donation'\nimport Donations from './components/Donations'\nimport Login from './components/Login'\nimport User from './components/User'\nimport Menu from './Menu'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles'\n\nexport default function App() {\n    const dispatch = useDispatch()\n    const [paletteMode, setPaletteMode] = useState(0)\n\n    const theme = responsiveFontSizes(\n        createMuiTheme({\n            palette: {\n                type: ['dark', 'light'][paletteMode],\n                primary: {\n                    main: '#c62828',\n                },\n                secondary: {\n                    main: '#1976d2',\n                },\n            },\n        })\n    )\n\n    const togglePalleteMode = () => {\n        setPaletteMode((paletteMode + 1) % 2)\n    }\n\n    const openAuthActivate = useSelector((state) => state.authReducer.user === null || !state.authReducer.activated)\n    const openAuthLogin = useSelector((state) => state.authReducer.token === null)\n\n    const user = useSelector((state) => state.userReducer)\n    const settingsParams = useSelector((state) => state.settingsReducer.params)\n    const token = useSelector((state) => state.authReducer.token)\n\n    if (openAuthActivate) {\n        return <Activate />\n    } else if (openAuthLogin) {\n        return <Login />\n    }\n\n    if (user.Meno === null) {\n        dispatch(user_home(token))\n        dispatch(user_card(token))\n    }\n\n    if (settingsParams.length === 0) {\n        dispatch(settings_params(token))\n    }\nconsole.log(process)\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Menu togglePalleteMode={togglePalleteMode}>\n                <Route exact path={process.env.PUBLIC_URL + '/'} component={Donations} />\n                <Route exact path={process.env.PUBLIC_URL + '/user'} component={User} />\n                <Route path={process.env.PUBLIC_URL + '/donation/:id'} component={Donation} />\n            </Menu>\n        </ThemeProvider>\n    )\n}\n","import Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { auth_activate, auth_activate_enable } from '../actions'\r\n\r\nexport default function FormDialog() {\r\n    const dispatch = useDispatch()\r\n    const [user, setUser] = useState('')\r\n\r\n    const handleInput = (e) => {\r\n        setUser(e.target.value)\r\n    }\r\n\r\n    const handleActivate = () => {\r\n        dispatch(auth_activate(user))\r\n    }\r\n\r\n    const handleSetActivated = () => {\r\n        dispatch(auth_activate_enable(user))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Aktivácia</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"user_id\"\r\n                        label=\"Užívatelské číslo\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onInput={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleSetActivated} color=\"primary\" disabled={user.length<6}>\r\n                        Preskočiť\r\n                    </Button>\r\n                    <Button onClick={handleActivate} color=\"primary\" disabled={user.length<6}>\r\n                        Aktivovať\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Paper, useTheme, Typography, Card, CardActionArea } from '@material-ui/core'\r\nimport { makeStyles, createStyles } from '@material-ui/styles'\r\nimport { user_donationResultParam } from '../actions'\r\nimport { Chart } from 'react-google-charts'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: '0 10px',\r\n        },\r\n        grid: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            [theme.breakpoints.up('xl')]: {\r\n                maxWidth: '70%',\r\n                margin: 'auto',\r\n            },\r\n        },\r\n        paper: {\r\n            marginBottom: 2,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            padding: '15px 2px',\r\n        },\r\n        card: {\r\n            flex: 1,\r\n            minWidth: 120,\r\n            alignSelf: 'stretch',\r\n            margin: 2,\r\n            textAlign: 'center',\r\n        },\r\n        selectedCard: {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n        cardArea: {\r\n            padding: '10px 0',\r\n            height: '100%',\r\n        },\r\n    }),\r\n)\r\n\r\nconst BarChart = (props) => {\r\n    const theme = useTheme()\r\n\r\n    return <Chart\r\n        chartType=\"ColumnChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n            ['Odber', 'Hodnota', { role: 'annotation' }],\r\n            ...props.data.map(odber => [\r\n                odber.Datum.replace(/(\\d+)-(\\d+)-(\\d+).+/, '$3.$2.$1'),\r\n                odber.Hodnota,\r\n                odber.Hodnota,\r\n            ]),\r\n        ]}\r\n        options={{\r\n            animation: {\r\n                startup: true,\r\n                duration: 200,\r\n            },\r\n            annotations:{\r\n                textStyle: {\r\n                    fontSize: 12,\r\n                },\r\n            },\r\n            backgroundColor: theme.palette.background.default,\r\n            chartArea: {\r\n                width: '100%',\r\n                left: 40,\r\n                top: 40,\r\n            },\r\n            colors: [theme.palette.primary.main],\r\n            hAxis: {\r\n                title: 'Dátum odberu',\r\n                gridlines: {\r\n                    count: 20,\r\n                    color: '#fff',\r\n                },\r\n                baselineColor: theme.palette.text.primary,\r\n                textColor: theme.palette.text.primary,\r\n                titleTextStyle: {\r\n                    color: theme.palette.text.primary,\r\n                }\r\n            },\r\n            vAxis: {\r\n                title: 'Hodnota zložky krvi',\r\n                minValue: 0,\r\n                textColor: theme.palette.text.primary,\r\n                baselineColor: theme.palette.text.primary,\r\n                titleTextStyle: {\r\n                    color: theme.palette.text.primary,\r\n                },\r\n            },\r\n            legend: {\r\n                position: 'none',\r\n            },\r\n            height: 250,\r\n            width: '100%',\r\n            title: props.title,\r\n            titleTextStyle: {\r\n                color: theme.palette.text.primary,\r\n                fontSize: 15,\r\n            },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n    />\r\n}\r\n\r\nexport default function Donation(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector((state) => state.authReducer.token)\r\n    const donation = useSelector((state) => state.donationReducer.info)\r\n    const result = useSelector((state) => state.donationReducer.result)\r\n    const donationResultParam = useSelector((state) => state.donationReducer.param)\r\n    const settingsParams = useSelector((state) => state.settingsReducer.params.slice(0, -1))\r\n    const donationId = props.match.params.id\r\n\r\n    const loadDonationResultParam = (param) => {\r\n        setSelectedParam(param)\r\n        dispatch(user_donationResultParam(token, donationId, param.Id))\r\n    }\r\n\r\n    const [selectedParam, setSelectedParam] = useState(null)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BarChart title={selectedParam && `${selectedParam.Nazov} [ ${selectedParam.MernaJednotka} ]`} data={donationResultParam} />\r\n            <div className={classes.grid}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        {new Date(donation.Zaciatok).toLocaleDateString() + ' ' +\r\n                            new Date(donation.Zaciatok).toLocaleTimeString() + ' - ' +\r\n                            new Date(donation.Koniec).toLocaleTimeString()}\r\n                    </Typography>\r\n                </Paper>\r\n                {settingsParams.map((settingsParam, idx) => (\r\n                    <Card\r\n                        className={clsx(classes.card, selectedParam && selectedParam.Id === settingsParam.Id && classes.selectedCard)}\r\n                        key={settingsParam.Id}\r\n                        onClick={() => loadDonationResultParam(settingsParam)}\r\n                    >\r\n                        <CardActionArea className={classes.cardArea}>\r\n                            <Typography variant=\"body2\">\r\n                                {settingsParam.Nazov}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" noWrap>\r\n                                {result[idx] ? result[idx].Hodnota : 0} {settingsParam.MernaJednotka}\r\n                            </Typography>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBarChart.propTypes = {\r\n    data: PropTypes.array,\r\n    title: PropTypes.string,\r\n}\r\nDonation.propTypes = {\r\n    match: PropTypes.any,\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { user_donations, user_donation } from '../actions'\r\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core'\r\n\r\nexport default function Donations() {\r\n    const dispatch = useDispatch()\r\n    const donations = useSelector((state) => state.donationsReducer)\r\n    const token = useSelector((state) => state.authReducer.token)\r\n\r\n    const loadDonation = (id) => {\r\n        dispatch(user_donation(token, id))\r\n    }\r\n\r\n    if (donations.length === 0) {\r\n        dispatch(user_donations(token))\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {donations.map((item) => (\r\n                <React.Fragment key={item.Id} >\r\n                    <ListItem button onClick={() => loadDonation(item.Id)}>\r\n                        <ListItemText>\r\n                            {item.Pracovisko}\r\n                        </ListItemText>\r\n                        <ListItemText>\r\n                            {new Date(item.DatumOdberu).toLocaleDateString()}\r\n                        </ListItemText>\r\n                        <ListItemText>\r\n                            {item.TypOdberu}\r\n                            <br />\r\n                            {item.MnozstvoMl} ml\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    <Divider variant=\"middle\" component=\"li\" />\r\n                </React.Fragment>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n","import Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth_login } from '../actions'\r\nimport sha256 from 'sha256'\r\n\r\nexport default function FormDialog() {\r\n    const [pass, setPass] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const handleInput = (e) => {\r\n        setPass(e.target.value)\r\n    }\r\n\r\n    const user = useSelector((state) => state.authReducer.user)\r\n    const pin = useSelector((state) => state.authReducer.pass)\r\n\r\n    if (pin !== null) {\r\n        dispatch(auth_login(user, pin))\r\n    }\r\n\r\n    const handleActivate = () => {\r\n        dispatch(auth_login(user, sha256(pass)))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Prihlásenie</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"pass\"\r\n                        label=\"Pin\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        onInput={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleActivate} color=\"primary\" disabled={pass.length !== 4}>\r\n                        Prihlásiť sa\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}