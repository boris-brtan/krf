{"version":3,"sources":["actions.js","components/Activate.js","components/Donation.js","components/Donations.js","components/Login.js","components/User.js","Menu.js","serviceWorker.js","api.js","sagas.js","reducers/auth.js","reducers/donation.js","reducers/donations.js","reducers/settings.js","reducers/user.js","reducers/index.js","index.js","App.js"],"names":["AUTH_ACTIVATE_REQUESTED","AUTH_ACTIVATE_SUCCEEDED","AUTH_ACTIVATE_FAILED","AUTH_LOGIN_REQUESTED","AUTH_LOGIN_SUCCEEDED","AUTH_LOGIN_FAILED","AUTH_TOKEN_EXPIRED","USER_HOME_REQUESTED","USER_HOME_SUCCEEDED","USER_HOME_FAILED","USER_CARD_REQUESTED","USER_CARD_SUCCEEDED","USER_CARD_FAILED","USER_DONATIONS_REQUESTED","USER_DONATIONS_SUCCEEDED","USER_DONATIONS_FAILED","USER_DONATION_REQUESTED","USER_DONATION_SUCCEEDED","USER_DONATION_FAILED","USER_DONATION_RESULT_REQUESTED","USER_DONATION_RESULT_SUCCEEDED","USER_DONATION_RESULT_FAILED","USER_DONATION_PARAM_REQUESTED","USER_DONATION_PARAM_SUCCEEDED","USER_DONATION_PARAM_FAILED","SETTINGS_PARAMS_REQUESTED","SETTINGS_PARAMS_SUCCEEDED","SETTINGS_PARAMS_FAILED","auth_activate","user","type","payload","auth_activate_enable","auth_login","pass","auth_clear","user_home","token","user_card","user_donations","user_donation","id","user_donationResultParam","paramId","settings_params","FormDialog","dispatch","useDispatch","useState","setUser","Dialog","open","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","onInput","e","target","value","DialogActions","Button","onClick","color","disabled","length","useStyles","makeStyles","theme","createStyles","root","padding","grid","display","flexWrap","justifyContent","alignItems","breakpoints","up","maxWidth","paper","marginBottom","width","textAlign","card","flex","minWidth","alignSelf","selectedCard","background","palette","primary","main","contrastText","cardArea","height","BarChart","props","useTheme","chartType","loader","data","role","map","odber","Datum","replace","Hodnota","options","animation","startup","duration","annotations","textStyle","fontSize","backgroundColor","default","chartArea","left","top","colors","hAxis","title","gridlines","count","baselineColor","text","textColor","titleTextStyle","vAxis","minValue","legend","position","rootProps","Donation","classes","useSelector","state","authReducer","donation","donationReducer","info","result","donationResultParam","param","settingsParams","settingsReducer","params","slice","donationId","match","selectedParam","setSelectedParam","className","Nazov","MernaJednotka","Paper","Typography","variant","Date","Zaciatok","toLocaleString","Koniec","toLocaleTimeString","settingsParam","idx","Card","clsx","Id","key","CardActionArea","noWrap","Donations","donations","donationsReducer","List","item","Fragment","ListItem","button","ListItemText","Pracovisko","DatumOdberu","toLocaleDateString","TypOdberu","MnozstvoMl","Divider","component","setPass","pin","sha256","spacing","cardHeader","paddingBottom","avatar","secondary","barcode","marginTop","marginRight","User","userReducer","userID","barcodeOpen","setBarcodeOpen","useEffect","setTimeout","handleToggleBarcode","jsbarcode","format","onClose","CardHeader","Meno","subheader","KrvnaSkupina","FenotypAsString","Poistovna","Avatar","aria-label","action","IconButton","CardContent","PocetOdberov","TerminNasledOdberu","DomovskePracovisko","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","paddingTop","contentShift","paletteMode","Menu","setOpen","togglePalleteMode","toggleDrawer","onTouchStart","nativeEvent","startX","touches","clientX","addEventListener","handleSwipe","evt","swipeLength","changedTouches","removeEventListener","AppBar","Toolbar","edge","Drawer","anchor","onTransitionEnd","window","dispatchEvent","Event","push","handleMenuItem","ListItemIcon","handler","children","Boolean","location","hostname","API_URL","API","auth","activate","a","fetch","method","headers","evc","body","JSON","stringify","response","json","login","home","userInfo","donationResult","settings","bloodSettings","authActivate","authLogin","userHome","userCard","userDonations","userDonation","userDonationResult","userDonationResultParam","call","api","put","message","all","takeLatest","initialState","activated","initialResultState","initialParamState","initialStateHome","Fenotyp","Pohlavie","initialStateCard","Priezvisko","RodneCislo","KrvnaSkupinaPopis","FenotypAsText","KrvnaSkupinaZaklad","combineReducers","history","process","search","createBrowserHistory","createHashHistory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","parse","localStorage","applyMiddleware","routerMiddleware","run","rootSaga","ReactDOM","render","setPaletteMode","responsiveFontSizes","createMuiTheme","openAuthActivate","openAuthLogin","ThemeProvider","CssBaseline","exact","path","document","getElementById","onbeforeunload","getState","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd059ddb.chunk.js","sourcesContent":["export const AUTH_ACTIVATE_REQUESTED = 'AUTH_ACTIVATE_REQUESTED'\r\nexport const AUTH_ACTIVATE_SUCCEEDED = 'AUTH_ACTIVATE_SUCCEEDED'\r\nexport const AUTH_ACTIVATE_FAILED = 'AUTH_ACTIVATE_FAILED'\r\nexport const AUTH_ACTIVATE_ENABLED = 'AUTH_ACTIVATE_ENABLE'\r\n\r\nexport const AUTH_LOGIN_REQUESTED = 'AUTH_LOGIN_REQUESTED'\r\nexport const AUTH_LOGIN_SUCCEEDED = 'AUTH_LOGIN_SUCCEEDED'\r\nexport const AUTH_LOGIN_FAILED = 'AUTH_LOGIN_FAILED'\r\n\r\nexport const AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED'\r\nexport const AUTH_CLEAR = 'AUTH_CLEAR'\r\n\r\nexport const USER_HOME_REQUESTED = 'USER_HOME_REQUESTED'\r\nexport const USER_HOME_SUCCEEDED = 'USER_HOME_SUCCEEDED'\r\nexport const USER_HOME_FAILED = 'USER_HOME_FAILED'\r\n\r\nexport const USER_CARD_REQUESTED = 'USER_CARD_REQUESTED'\r\nexport const USER_CARD_SUCCEEDED = 'USER_CARD_SUCCEEDED'\r\nexport const USER_CARD_FAILED = 'USER_CARD_FAILED'\r\n\r\nexport const USER_DONATIONS_REQUESTED = 'USER_DONATIONS_REQUESTED'\r\nexport const USER_DONATIONS_SUCCEEDED = 'USER_DONATIONS_SUCCEEDED'\r\nexport const USER_DONATIONS_FAILED = 'USER_DONATIONS_FAILED'\r\n\r\nexport const USER_DONATION_REQUESTED = 'USER_DONATION_REQUESTED'\r\nexport const USER_DONATION_SUCCEEDED = 'USER_DONATION_SUCCEEDED'\r\nexport const USER_DONATION_FAILED = 'USER_DONATION_FAILED'\r\n\r\nexport const USER_DONATION_RESULT_REQUESTED = 'USER_DONATION_RESULT_REQUESTED'\r\nexport const USER_DONATION_RESULT_SUCCEEDED = 'USER_DONATION_RESULT_SUCCEEDED'\r\nexport const USER_DONATION_RESULT_FAILED = 'USER_DONATION_RESULT_FAILED'\r\n\r\nexport const USER_DONATION_PARAM_REQUESTED = 'USER_DONATION_PARAM_REQUESTED'\r\nexport const USER_DONATION_PARAM_SUCCEEDED = 'USER_DONATION_PARAM_SUCCEEDED'\r\nexport const USER_DONATION_PARAM_FAILED = 'USER_DONATION_PARAM_FAILED'\r\n\r\nexport const SETTINGS_PARAMS_REQUESTED = 'SETTINGS_PARAMS_REQUESTED'\r\nexport const SETTINGS_PARAMS_SUCCEEDED = 'SETTINGS_PARAMS_SUCCEEDED'\r\nexport const SETTINGS_PARAMS_FAILED = 'SETTINGS_PARAMS_FAILED'\r\n\r\nexport const auth_activate = (user) => ({ type: AUTH_ACTIVATE_REQUESTED, payload: user })\r\nexport const auth_activate_enable = (user) => ({ type: AUTH_ACTIVATE_ENABLED, payload: user })\r\nexport const auth_login = (user, pass) => ({ type: AUTH_LOGIN_REQUESTED, payload: { user, pass } })\r\nexport const auth_clear = () => ({ type: AUTH_CLEAR })\r\n\r\nexport const user_home = (token) => ({ type: USER_HOME_REQUESTED, payload: token })\r\nexport const user_card = (token) => ({ type: USER_CARD_REQUESTED, payload: token })\r\nexport const user_donations = (token) => ({ type: USER_DONATIONS_REQUESTED, payload: token })\r\nexport const user_donation = (token, id) => ({ type: USER_DONATION_REQUESTED, payload: { token, id } })\r\nexport const user_donationResult = (token, id) => ({ type: USER_DONATION_RESULT_REQUESTED, payload: { token, id } })\r\nexport const user_donationResultParam = (token, id, paramId) => ({\r\n    type: USER_DONATION_PARAM_REQUESTED,\r\n    payload: { token, id, paramId }\r\n})\r\n\r\nexport const settings_params = (token) => ({ type: SETTINGS_PARAMS_REQUESTED, payload: token })\r\n","import Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { auth_activate, auth_activate_enable } from '../actions'\r\n\r\nexport default function FormDialog() {\r\n    const dispatch = useDispatch()\r\n    const [user, setUser] = useState('')\r\n\r\n    const handleInput = (e) => {\r\n        setUser(e.target.value)\r\n    }\r\n\r\n    const handleActivate = () => {\r\n        dispatch(auth_activate(user))\r\n    }\r\n\r\n    const handleSetActivated = () => {\r\n        dispatch(auth_activate_enable(user))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Aktivácia</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"user_id\"\r\n                        label=\"Užívatelské číslo\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onInput={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleSetActivated} color=\"primary\" disabled={user.length<6}>\r\n                        Preskočiť\r\n                    </Button>\r\n                    <Button onClick={handleActivate} color=\"primary\" disabled={user.length<6}>\r\n                        Aktivovať\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Paper, useTheme, Typography, Card, CardActionArea } from '@material-ui/core'\r\nimport { makeStyles, createStyles } from '@material-ui/styles'\r\nimport { user_donationResultParam } from '../actions'\r\nimport { Chart } from 'react-google-charts'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: '0 10px',\r\n        },\r\n        grid: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            [theme.breakpoints.up('xl')]: {\r\n                maxWidth: '70%',\r\n                margin: 'auto',\r\n            },\r\n        },\r\n        paper: {\r\n            marginBottom: 2,\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            padding: '15px 2px',\r\n        },\r\n        card: {\r\n            flex: 1,\r\n            minWidth: 120,\r\n            alignSelf: 'stretch',\r\n            margin: 2,\r\n            textAlign: 'center',\r\n        },\r\n        selectedCard: {\r\n            background: theme.palette.primary.main,\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n        cardArea: {\r\n            padding: '10px 0',\r\n            height: '100%',\r\n        },\r\n    }),\r\n)\r\n\r\nconst BarChart = (props) => {\r\n    const theme = useTheme()\r\n\r\n    return <Chart\r\n        chartType=\"ColumnChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n            ['Odber', 'Hodnota', { role: 'annotation' }],\r\n            ...props.data.map(odber => [\r\n                odber.Datum.replace(/(\\d+)-(\\d+)-(\\d+).+/, '$3.$2.$1'),\r\n                odber.Hodnota,\r\n                odber.Hodnota,\r\n            ]),\r\n        ]}\r\n        options={{\r\n            animation: {\r\n                startup: true,\r\n                duration: 200,\r\n            },\r\n            annotations:{\r\n                textStyle: {\r\n                    fontSize: 12,\r\n                },\r\n            },\r\n            backgroundColor: theme.palette.background.default,\r\n            chartArea: {\r\n                width: '100%',\r\n                left: 40,\r\n                top: 40,\r\n            },\r\n            colors: [theme.palette.primary.main],\r\n            hAxis: {\r\n                title: 'Dátum odberu',\r\n                gridlines: {\r\n                    count: 20,\r\n                    color: '#fff',\r\n                },\r\n                baselineColor: theme.palette.text.primary,\r\n                textColor: theme.palette.text.primary,\r\n                titleTextStyle: {\r\n                    color: theme.palette.text.primary,\r\n                }\r\n            },\r\n            vAxis: {\r\n                title: 'Hodnota zložky krvi',\r\n                minValue: 0,\r\n                textColor: theme.palette.text.primary,\r\n                baselineColor: theme.palette.text.primary,\r\n                titleTextStyle: {\r\n                    color: theme.palette.text.primary,\r\n                },\r\n            },\r\n            legend: {\r\n                position: 'none',\r\n            },\r\n            height: 250,\r\n            width: '100%',\r\n            title: props.title,\r\n            titleTextStyle: {\r\n                color: theme.palette.text.primary,\r\n                fontSize: 15,\r\n            },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n    />\r\n}\r\n\r\nexport default function Donation(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const token = useSelector((state) => state.authReducer.token)\r\n    const donation = useSelector((state) => state.donationReducer.info)\r\n    const result = useSelector((state) => state.donationReducer.result)\r\n    const donationResultParam = useSelector((state) => state.donationReducer.param)\r\n    const settingsParams = useSelector((state) => state.settingsReducer.params.slice(0, -1))\r\n    const donationId = props.match.params.id\r\n\r\n    const loadDonationResultParam = (param) => {\r\n        setSelectedParam(param)\r\n        dispatch(user_donationResultParam(token, donationId, param.Id))\r\n    }\r\n\r\n    const [selectedParam, setSelectedParam] = useState(null)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BarChart title={selectedParam && `${selectedParam.Nazov} [ ${selectedParam.MernaJednotka} ]`} data={donationResultParam} />\r\n            <div className={classes.grid}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\">\r\n                        {new Date(donation.Zaciatok).toLocaleString().replace(',', '') + ' - ' +\r\n                            new Date(donation.Koniec).toLocaleTimeString()}\r\n                    </Typography>\r\n                </Paper>\r\n                {settingsParams.map((settingsParam, idx) => (\r\n                    <Card\r\n                        className={clsx(classes.card, selectedParam && selectedParam.Id === settingsParam.Id && classes.selectedCard)}\r\n                        key={settingsParam.Id}\r\n                        onClick={() => loadDonationResultParam(settingsParam)}\r\n                    >\r\n                        <CardActionArea className={classes.cardArea}>\r\n                            <Typography variant=\"body2\">\r\n                                {settingsParam.Nazov}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" noWrap>\r\n                                {result[idx] ? result[idx].Hodnota : 0} {settingsParam.MernaJednotka}\r\n                            </Typography>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBarChart.propTypes = {\r\n    data: PropTypes.array,\r\n    title: PropTypes.string,\r\n}\r\nDonation.propTypes = {\r\n    match: PropTypes.any,\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { user_donations, user_donation } from '../actions'\r\nimport { List, ListItem, ListItemText, Divider } from '@material-ui/core'\r\n\r\nexport default function Donations() {\r\n    const dispatch = useDispatch()\r\n    const donations = useSelector((state) => state.donationsReducer)\r\n    const token = useSelector((state) => state.authReducer.token)\r\n\r\n    const loadDonation = (id) => {\r\n        dispatch(user_donation(token, id))\r\n    }\r\n\r\n    if (donations.length === 0) {\r\n        dispatch(user_donations(token))\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {donations.map((item) => (\r\n                <React.Fragment key={item.Id} >\r\n                    <ListItem button onClick={() => loadDonation(item.Id)}>\r\n                        <ListItemText>\r\n                            {item.Pracovisko}\r\n                        </ListItemText>\r\n                        <ListItemText>\r\n                            {new Date(item.DatumOdberu).toLocaleDateString()}\r\n                        </ListItemText>\r\n                        <ListItemText>\r\n                            {item.TypOdberu}\r\n                            <br />\r\n                            {item.MnozstvoMl} ml\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    <Divider variant=\"middle\" component=\"li\" />\r\n                </React.Fragment>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n","import Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth_login } from '../actions'\r\nimport sha256 from 'sha256'\r\n\r\nexport default function FormDialog() {\r\n    const [pass, setPass] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const handleInput = (e) => {\r\n        setPass(e.target.value)\r\n    }\r\n\r\n    const user = useSelector((state) => state.authReducer.user)\r\n    const pin = useSelector((state) => state.authReducer.pass)\r\n\r\n    if (pin !== null) {\r\n        dispatch(auth_login(user, pin))\r\n    }\r\n\r\n    const handleActivate = () => {\r\n        dispatch(auth_login(user, sha256(pass)))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Prihlásenie</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"pass\"\r\n                        label=\"Pin\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        onInput={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleActivate} color=\"primary\" disabled={pass.length !== 4}>\r\n                        Prihlásiť sa\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { makeStyles, createStyles } from '@material-ui/styles'\r\nimport { CardHeader, Avatar, Card, CardContent, Typography, List, ListItem, ListItemText, Divider, IconButton, Dialog } from '@material-ui/core'\r\nimport CreditCard from '@material-ui/icons/CreditCard'\r\nimport jsbarcode from 'jsbarcode'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: theme.spacing(2),\r\n        },\r\n        card: {\r\n            margin: 'auto',\r\n            maxWidth: 700,\r\n        },\r\n        cardHeader: {\r\n            paddingBottom: 0,\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n        },\r\n        barcode: {\r\n            marginTop: theme.spacing(2),\r\n            marginRight: theme.spacing(2),\r\n        }\r\n    })\r\n)\r\n\r\nexport default function User() {\r\n    const classes = useStyles()\r\n\r\n    const user = useSelector((state) => state.userReducer)\r\n    const userID = useSelector((state) => state.authReducer.user)\r\n\r\n    const [barcodeOpen, setBarcodeOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n\r\n        }, 1000)\r\n    }, [userID])\r\n\r\n    const handleToggleBarcode = () => {\r\n        setBarcodeOpen(!barcodeOpen)\r\n        if (!barcodeOpen) setTimeout(() => jsbarcode('.barcode', userID, { width: 3, format: 'code128' }), 200) //TODO: find better implementation https://lindell.me/JsBarcode/\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog open={barcodeOpen} onClose={handleToggleBarcode}>\r\n                <svg className=\"barcode\" />\r\n            </Dialog>\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    className={classes.cardHeader}\r\n                    title={<Typography variant=\"body1\">{user.Meno}</Typography>}\r\n                    subheader={<>{user.KrvnaSkupina + ' ' + user.FenotypAsString}<br />{user.Poistovna}</>}\r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n                            {user.Meno[0]}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"barcode\" className={classes.barcode} onClick={handleToggleBarcode}>\r\n                            <CreditCard />\r\n                        </IconButton>\r\n                    }>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem >\r\n                            <ListItemText\r\n                                primary=\"Počet odberov\"\r\n                                secondary={user.PocetOdberov}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Nasledujúci odporúčaný odber\"\r\n                                secondary={new Date(user.TerminNasledOdberu).toLocaleDateString()}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemText\r\n                                primary=\"Registrované pracovisko\"\r\n                                secondary={user.DomovskePracovisko}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    AppBar, Divider, Drawer, IconButton, List, ListItem,\r\n    ListItemIcon, ListItemText, Toolbar, Typography\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport DarkThemeIcon from '@material-ui/icons/Brightness4'\r\nimport LightThemeIcon from '@material-ui/icons/Brightness7'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { push } from 'react-router-redux'\r\nimport { useTheme } from '@material-ui/styles'\r\nimport { auth_clear } from './actions'\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            paddingTop: theme.spacing(1),\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: drawerWidth,\r\n        },\r\n        paletteMode: {\r\n            position: 'absolute',\r\n            left: 0,\r\n        }\r\n    }),\r\n)\r\n\r\nexport default function Menu(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const { togglePalleteMode } = props\r\n    const toggleDrawer = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleMenuItem = (idx) => dispatch(push([\r\n        '/user',\r\n        '/'\r\n    ][idx]))\r\n    const handleDrawerTransition = () => {\r\n        window.dispatchEvent(new Event('resize'))\r\n    }\r\n    const handleAuthClear = () => dispatch(auth_clear())\r\n\r\n\r\n    const handleTouchStart = ({ nativeEvent: e }) => {\r\n        const startX = e.touches[0].clientX\r\n\r\n        const handleSwipe = (evt) => {\r\n            const swipeLength = evt.changedTouches[0].clientX - startX\r\n            if (!open && swipeLength > 150) {\r\n                setOpen(true)\r\n            } else if (open && swipeLength < -150) {\r\n                setOpen(false)\r\n            }\r\n            e.target.removeEventListener('touchend', handleSwipe)\r\n        }\r\n        if ((!open && startX < 50) || (open && startX < 300)) {\r\n            e.target.addEventListener('touchend', handleSwipe)\r\n        }\r\n    }\r\n\r\n    return (<div onTouchStart={handleTouchStart}>\r\n        <AppBar position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\r\n                    onClick={toggleDrawer} className={clsx(classes.menuButton, open && classes.hide)}\r\n                ><MenuIcon /></IconButton>\r\n                <Typography variant=\"h6\" noWrap>Slovenské darovanie krvi</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"persistent\" anchor=\"left\" open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n            onTransitionEnd={handleDrawerTransition}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={togglePalleteMode} className={classes.paletteMode}>\r\n                    {theme.palette.type === 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\r\n                </IconButton>\r\n                <IconButton onClick={toggleDrawer}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {['Darca', 'Výsledky'].map((text, idx) => (\r\n                    <ListItem button key={text} onClick={() => handleMenuItem(idx)}>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {[{ text: 'Odhlásiť sa', handler: handleAuthClear }].map(({ text, handler }) => (\r\n                    <ListItem button key={text} onClick={handler}>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            {props.children}\r\n        </main>\r\n    </div>)\r\n}\r\n\r\nMenu.propTypes = {\r\n    children: PropTypes.any,\r\n    togglePalleteMode: PropTypes.func,\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const API_URL = 'https://krv.roxor.cloud/API'\r\n\r\nconst API = {\r\n    auth: {\r\n        activate: async (user) => {\r\n            const response = await fetch(API_URL + '/Authentication/ActivateRequest', {\r\n                method: 'POST',\r\n                headers: {\r\n                    evc: user,\r\n                },\r\n                body: JSON.stringify({\r\n                    // activatePIN: null,\r\n                    // deviceId: null,\r\n                    evc: user,\r\n                    // pin: null,\r\n                }),\r\n            })\r\n            const token = await response.json()\r\n\r\n            return token\r\n        },\r\n        login: async (user, pass) => {\r\n            const response = await fetch(API_URL + '/Authentication/login', {\r\n                headers: {\r\n                    evc: user,\r\n                    pin: pass,\r\n                },\r\n            })\r\n            const token = await response.json()\r\n\r\n            return token\r\n        }\r\n    },\r\n    user: {\r\n        home: async (token) => {\r\n            const response = await fetch(API_URL + '/darca/Vitajte', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const userInfo = await response.json()\r\n\r\n            // {\r\n            //     \"TerminNasledOdberu\":Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"KrvnaSkupina\":String,\r\n            //     \"Fenotyp\":String,\r\n            //     \"FenotypAsString\":String,\r\n            //     \"Pohlavie\":String(\"M\",\"Z\")\r\n            // }\r\n            return userInfo\r\n        },\r\n        card: async (token) => {\r\n            const response = await fetch(API_URL + '/darca/PreukazDarcu', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const userInfo = await response.json()\r\n\r\n            //    {\r\n            //     \"Meno\": String,\r\n            //     \"Priezvisko\":String,\r\n            //     \"RodneCislo\":String,\r\n            //     \"DomovskePracovisko\":String,\r\n            //     \"PocetOdberov\":Number,\r\n            //     \"KrvnaSkupinaPopis\":String,\r\n            //     \"FenotypAsText\":String,\r\n            //     \"Poistovna\":String,\r\n            //     \"KrvnaSkupinaZaklad\":String\r\n            // }\r\n            return userInfo\r\n        },\r\n        donations: async (token) => {\r\n            const response = await fetch(API_URL + '/darca/odber', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donations = await response.json()\r\n\r\n            // [{\r\n            //     \"Id\":Number,\r\n            //     \"DatumOdberu\":Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"CisloOdberu\":String,\r\n            //     \"TypOdberu\":String(\"celá krv\",\"plazma\",...),\r\n            //     \"Pracovisko\":String,\r\n            //     \"MnozstvoMl\":Number,\r\n            //     \"Spracovanie\":Number(bool),\r\n            //     \"Karantena\":Number(bool)\r\n            // },]\r\n            return donations\r\n        },\r\n        donation: async (token, id) => {\r\n            const response = await fetch(API_URL + `/darca/odber/${id}`, {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donation = await response.json()\r\n\r\n            // {\r\n            //     \"Zaciatok\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Koniec\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Trvanie\": Number[minute],\r\n            //     \"Vyjazd\": Boolean,\r\n            //     \"Autoodber\": Boolean\r\n            // }\r\n            return donation\r\n        },\r\n        donationResult: async (token, id) => {\r\n            const response = await fetch(API_URL + `/darca/odber/${id}/lvko`, {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donation = await response.json()\r\n\r\n            // [{\r\n            //     \"IdParamKO\": Number(4,2,3,5,6,9), // no 27 why ???\r\n            //     \"Datum\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Hodnota\": Number,\r\n            //     \"MimoLimit\": Boolean,\r\n            //     \"OdberId\": Number(0),\r\n            //     \"IsSelected\": Boolean,\r\n            //     \"IsPadding\": Boolean\r\n            // },]\r\n            return donation\r\n        },\r\n        donationResultParam: async (token, id, paramId) => {\r\n            const response = await fetch(API_URL + `/darca/lvko/${paramId}/${id}`, {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n            const donation = await response.json()\r\n\r\n            // [{\r\n            //     \"Datum\": Datetime(\"YYYY-MM-DDThh:mm:ss\"),\r\n            //     \"Hodnota\": 7.00,\r\n            //     \"MimoLimit\": Boolean,\r\n            //     \"OdberId\": Number,\r\n            //     \"IsSelected\": Boolean,\r\n            //     \"IsPadding\": Boolean\r\n            // },]\r\n            return donation\r\n        },\r\n    },\r\n    settings: {\r\n        params: async (token) => {\r\n            const response = await fetch(API_URL + '/ciselniky/ParametreKO', {\r\n                headers: {\r\n                    'X-EKDToken': token,\r\n                },\r\n            })\r\n\r\n            const bloodSettings = await response.json()\r\n\r\n            // [{\r\n            //     \"Id\": Number,\r\n            //     \"Kod\": String(\r\n            //         4: \"HGB hemoglobín\",\r\n            //         2: \"WBC leukocyty\",\r\n            //         3: \"RBC erytrocyty\",\r\n            //         5: \"HCT hematokrit\",\r\n            //         6: \"MCV stredný objem Er\",\r\n            //         9: \"PLT trombocyty\",\r\n            //         27: \"Hgb odber z prsta\"\r\n            //     ),\r\n            //     \"Nazov\": \"Červené krvné farbivo\",\r\n            //     \"MernaJednotka\": String(\"g/l\",\"x10e9/l\",\"x10e12/l\",\"l/l\",\"fl\",\"x10e9/l\",\"g/l\")\r\n            //     \"DolnaHranicaMuzi\": Number,\r\n            //     \"HornaHranicaMuzi\": Number,\r\n            //     \"DolnaHranicaZeny\": Number,\r\n            //     \"HornaHranicaZeny\": Number\r\n            // },]\r\n            return bloodSettings\r\n        },\r\n    },\r\n}\r\n\r\nexport default API\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects'\r\nimport { push } from 'react-router-redux'\r\nimport api from './api'\r\nimport {\r\n    AUTH_ACTIVATE_REQUESTED, AUTH_ACTIVATE_SUCCEEDED, AUTH_ACTIVATE_FAILED,\r\n    AUTH_LOGIN_REQUESTED, AUTH_LOGIN_SUCCEEDED, AUTH_LOGIN_FAILED,\r\n    AUTH_TOKEN_EXPIRED,\r\n    USER_HOME_REQUESTED, USER_HOME_SUCCEEDED, USER_HOME_FAILED,\r\n    USER_CARD_REQUESTED, USER_CARD_SUCCEEDED, USER_CARD_FAILED,\r\n    USER_DONATIONS_REQUESTED, USER_DONATIONS_SUCCEEDED, USER_DONATIONS_FAILED,\r\n    USER_DONATION_REQUESTED, USER_DONATION_SUCCEEDED, USER_DONATION_FAILED,\r\n    USER_DONATION_RESULT_REQUESTED, USER_DONATION_RESULT_SUCCEEDED, USER_DONATION_RESULT_FAILED,\r\n    USER_DONATION_PARAM_REQUESTED, USER_DONATION_PARAM_SUCCEEDED, USER_DONATION_PARAM_FAILED,\r\n    SETTINGS_PARAMS_REQUESTED, SETTINGS_PARAMS_SUCCEEDED, SETTINGS_PARAMS_FAILED,\r\n} from './actions'\r\n\r\nfunction* authActivate(action) {\r\n    try {\r\n        const user = action.payload\r\n        const payload = yield call(api.auth.activate, user)\r\n\r\n        yield put({ type: AUTH_ACTIVATE_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: AUTH_ACTIVATE_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* authLogin(action) {\r\n    try {\r\n        const { user, pass } = action.payload\r\n        const payload = yield call(api.auth.login, user, pass)\r\n\r\n        yield put({ type: AUTH_LOGIN_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: AUTH_LOGIN_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* userHome(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.user.home, token)\r\n\r\n        yield put({ type: USER_HOME_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_HOME_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* userCard(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.user.card, token)\r\n\r\n        yield put({ type: USER_CARD_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_CARD_FAILED, message })\r\n    }\r\n}\r\n\r\nfunction* userDonations(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.user.donations, token)\r\n\r\n        yield put({ type: USER_DONATIONS_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATIONS_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* userDonation(action) {\r\n    try {\r\n        const { token, id } = action.payload\r\n        const payload = yield call(api.user.donation, token, id)\r\n        \r\n        yield put({ type: USER_DONATION_SUCCEEDED, payload })\r\n        yield put({ type: USER_DONATION_RESULT_REQUESTED, payload: action.payload })\r\n        yield put(push( '/donation/' + id))\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATION_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n\r\n        const { token, id } = action.payload\r\n        const payload = yield call(api.user.donation, token, id)\r\n\r\n        yield put({ type: USER_DONATION_SUCCEEDED, payload })\r\n        yield put({ type: USER_DONATION_RESULT_REQUESTED, payload: action.payload })\r\n        yield put(push( '/donation/' + id))\r\n    }\r\n}\r\n\r\nfunction* userDonationResult(action) {\r\n    try {\r\n        const { token, id } = action.payload\r\n        const payload = yield call(api.user.donationResult, token, id)\r\n\r\n        yield put({ type: USER_DONATION_RESULT_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATION_RESULT_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* userDonationResultParam(action) {\r\n    try {\r\n        const { token, id, paramId } = action.payload\r\n        const payload = yield call(api.user.donationResultParam, token, id, paramId)\r\n\r\n        yield put({ type: USER_DONATION_PARAM_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: USER_DONATION_PARAM_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nfunction* settingsParams(action) {\r\n    try {\r\n        const token = action.payload\r\n        const payload = yield call(api.settings.params, token)\r\n\r\n        yield put({ type: SETTINGS_PARAMS_SUCCEEDED, payload })\r\n    } catch ({ message }) {\r\n        yield put({ type: SETTINGS_PARAMS_FAILED, message })\r\n        yield put({ type: AUTH_TOKEN_EXPIRED })\r\n    }\r\n}\r\n\r\nexport default function* () {\r\n    yield all([\r\n        yield takeLatest(AUTH_ACTIVATE_REQUESTED, authActivate),\r\n        yield takeLatest(AUTH_LOGIN_REQUESTED, authLogin),\r\n        yield takeLatest(USER_HOME_REQUESTED, userHome),\r\n        yield takeLatest(USER_CARD_REQUESTED, userCard),\r\n        yield takeLatest(USER_DONATIONS_REQUESTED, userDonations),\r\n        yield takeLatest(USER_DONATION_REQUESTED, userDonation),\r\n        yield takeLatest(USER_DONATION_RESULT_REQUESTED, userDonationResult),\r\n        yield takeLatest(USER_DONATION_PARAM_REQUESTED, userDonationResultParam),\r\n        yield takeLatest(SETTINGS_PARAMS_REQUESTED, settingsParams),\r\n    ])\r\n}\r\n","import {\r\n    AUTH_ACTIVATE_SUCCEEDED, AUTH_ACTIVATE_FAILED, AUTH_ACTIVATE_ENABLED,\r\n    AUTH_LOGIN_REQUESTED, AUTH_LOGIN_SUCCEEDED, AUTH_LOGIN_FAILED,\r\n    AUTH_TOKEN_EXPIRED, AUTH_CLEAR,\r\n} from '../actions'\r\n\r\nconst initialState = {\r\n    user: null,\r\n    token: null,\r\n    activated: false,\r\n    pass: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIVATE_SUCCEEDED:\r\n        case AUTH_ACTIVATE_ENABLED:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                activated: true,\r\n            }\r\n        case AUTH_ACTIVATE_FAILED:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                activated: false\r\n            }\r\n        case AUTH_LOGIN_REQUESTED:\r\n            return {\r\n                ...state,\r\n                pass: action.payload.pass\r\n            }\r\n        case AUTH_LOGIN_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            }\r\n        case AUTH_LOGIN_FAILED:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                pass: null,\r\n            }\r\n        case AUTH_TOKEN_EXPIRED:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n            }\r\n        case AUTH_CLEAR:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","import {\r\n    USER_DONATION_SUCCEEDED, USER_DONATION_FAILED,\r\n    USER_DONATION_RESULT_SUCCEEDED, USER_DONATION_RESULT_FAILED,\r\n    USER_DONATION_PARAM_SUCCEEDED, USER_DONATION_PARAM_FAILED,\r\n} from '../actions'\r\n\r\nconst initialState = {\r\n    info: {}\r\n}\r\n\r\nconst initialResultState = {\r\n    result: []\r\n}\r\n\r\nconst initialParamState = {\r\n    param: []\r\n}\r\n\r\nexport const donationReducer = (state = {\r\n    ...initialState,\r\n    ...initialParamState,\r\n    ...initialResultState,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case USER_DONATION_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            }\r\n        case USER_DONATION_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        case USER_DONATION_RESULT_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                result: action.payload\r\n            }\r\n        case USER_DONATION_RESULT_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialResultState\r\n            }\r\n        case USER_DONATION_PARAM_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                param: action.payload\r\n            }\r\n        case USER_DONATION_PARAM_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialParamState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default donationReducer\r\n","import {\r\n    USER_DONATIONS_SUCCEEDED, USER_DONATIONS_FAILED,\r\n} from '../actions'\r\n\r\nconst initialState = []\r\n\r\nexport const donationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_DONATIONS_SUCCEEDED:\r\n            return action.payload\r\n        case USER_DONATIONS_FAILED:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default donationReducer\r\n","import {\r\n    SETTINGS_PARAMS_SUCCEEDED, SETTINGS_PARAMS_FAILED,\r\n} from '../actions'\r\n\r\nconst initialState = { \r\n    params: [] \r\n}\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SETTINGS_PARAMS_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                params: action.payload\r\n            }\r\n        case SETTINGS_PARAMS_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default settingsReducer\r\n","import {\r\n    USER_HOME_SUCCEEDED, USER_HOME_FAILED,\r\n    USER_CARD_SUCCEEDED, USER_CARD_FAILED,\r\n} from '../actions'\r\n\r\nconst initialStateHome = {\r\n    TerminNasledOdberu: null,\r\n    KrvnaSkupina: null,\r\n    Fenotyp: null,\r\n    FenotypAsString: null,\r\n    Pohlavie: null,\r\n}\r\n\r\nconst initialStateCard = {\r\n    Meno: null,\r\n    Priezvisko: null,\r\n    RodneCislo: null,\r\n    DomovskePracovisko: null,\r\n    PocetOdberov: null,\r\n    KrvnaSkupinaPopis: null,\r\n    FenotypAsText: null,\r\n    Poistovna: null,\r\n    KrvnaSkupinaZaklad: null,\r\n}\r\n\r\nexport const userReducer = (state = { ...initialStateHome, ...initialStateCard, }, action) => {\r\n    switch (action.type) {\r\n        case USER_HOME_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case USER_HOME_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialStateHome\r\n            }\r\n        case USER_CARD_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case USER_CARD_FAILED:\r\n            return {\r\n                ...state,\r\n                ...initialStateCard\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer\r\n","import { combineReducers } from 'redux'\r\nimport authReducer from './auth'\r\nimport donationReducer from './donation'\r\nimport donationsReducer from './donations'\r\nimport settingsReducer from './settings'\r\nimport userReducer from './user'\r\n\r\nexport default combineReducers({\r\n    authReducer,\r\n    donationReducer,\r\n    donationsReducer,\r\n    settingsReducer,\r\n    userReducer\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createBrowserHistory, createHashHistory } from 'history'\nimport { Router } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './sagas'\nimport rootReducer from './reducers'\n\nconst history = process.env.PUBLIC_URL.search(/krf/) === -1 ? createBrowserHistory() : createHashHistory()\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n    rootReducer,\n    JSON.parse(localStorage.state || \"{}\"),\n    applyMiddleware(\n        sagaMiddleware,\n        routerMiddleware(history)\n    )\n)\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\nwindow.onbeforeunload = () => {\n    localStorage.state = JSON.stringify(store.getState())\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { user_card, user_home, settings_params } from './actions'\nimport Activate from './components/Activate'\nimport Donation from './components/Donation'\nimport Donations from './components/Donations'\nimport Login from './components/Login'\nimport User from './components/User'\nimport Menu from './Menu'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles'\n\nexport default function App() {\n    const dispatch = useDispatch()\n    const [paletteMode, setPaletteMode] = useState(0)\n\n    const theme = responsiveFontSizes(\n        createMuiTheme({\n            palette: {\n                type: ['dark', 'light'][paletteMode],\n                primary: {\n                    main: '#c62828',\n                },\n                secondary: {\n                    main: '#1976d2',\n                },\n            },\n        })\n    )\n\n    const togglePalleteMode = () => {\n        setPaletteMode((paletteMode + 1) % 2)\n    }\n\n    const openAuthActivate = useSelector((state) => state.authReducer.user === null || !state.authReducer.activated)\n    const openAuthLogin = useSelector((state) => state.authReducer.token === null)\n\n    const user = useSelector((state) => state.userReducer)\n    const settingsParams = useSelector((state) => state.settingsReducer.params)\n    const token = useSelector((state) => state.authReducer.token)\n\n    if (openAuthActivate) {\n        return <Activate />\n    } else if (openAuthLogin) {\n        return <Login />\n    }\n\n    if (user.Meno === null) {\n        dispatch(user_home(token))\n        dispatch(user_card(token))\n    }\n\n    if (settingsParams.length === 0) {\n        dispatch(settings_params(token))\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Menu togglePalleteMode={togglePalleteMode}>\n                <Route exact path={'/'} component={Donations} />\n                <Route exact path={'/user'} component={User} />\n                <Route path={ '/donation/:id'} component={Donation} />\n            </Menu>\n        </ThemeProvider>\n    )\n}\n"],"sourceRoot":""}